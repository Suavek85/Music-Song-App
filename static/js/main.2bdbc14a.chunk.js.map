{"version":3,"sources":["components/Header/images/music-black-white.jpg","components/Header/Logo/Logo.js","components/Search/Search.js","components/Header/Header.js","components/FavoriteIcon/FavoriteIcon.js","components/Card/Card.js","components/CardList/CardList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PinkMusicIcon","styled","QueueMusic","_templateObject","Search","_ref","buttonSubmit","searchChange","react_default","a","createElement","className","action","type","onChange","placeholder","required","onClick","backImageStyle","backgroundImage","Background","Header","style","href","Logo","components_Search_Search","RedFavoriteEmpty","FavoriteBorder","FavoriteIcon_templateObject","Card","props","FavoriteIcon","absolute","top-10","left-10","hvr-pulse","track","artist","album","CardList","isMusic","music","map","el","i","components_Card_Card","key","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","input","target","value","console","log","onButtonSubmit","url","concat","state","fetch","then","data","json","res","message","header","available","body","track_list","track_name","album_name","artist_name","cardsShow","components_Header_Header","components_CardList_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bdbc14a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music-black-white.1c419989.jpg\";","import styled from 'styled-components'\r\nimport {QueueMusic} from 'styled-icons/material/QueueMusic'\r\n\r\nconst PinkMusicIcon = styled(QueueMusic)`\r\n  color: grey;\r\n`\r\nexport default PinkMusicIcon;","import React from 'react';\r\nimport './Search.css';\r\n\r\n\r\nconst Search = ({ buttonSubmit, searchChange }) => {\r\n    return (\r\n        <form className=\"search white-70\" action=\"\">\r\n            <input type=\"search\" onChange={searchChange} placeholder=\"Justin Bieber\" required />\r\n            <button type=\"button\" onClick={buttonSubmit}>Search</button>\r\n        </form>  \r\n        \r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './Header.css';\r\nimport Background from './images/music-black-white.jpg';\r\nimport PinkMusicIcon from './Logo/Logo';\r\nimport Search from '../Search/Search';\r\n\r\n\r\nconst backImageStyle = { \r\n    backgroundImage: 'url(' + Background + ')',\r\n}\r\n\r\nconst Header = ({ buttonSubmit, searchChange }) => {\r\n\r\n    return (\r\n\r\n        <header className=\"sans-serif\">\r\n          <div className=\"cover bg-left bg-center-l\" style={backImageStyle}>\r\n            <div className=\"bg-black-80 pb5 pb6-m pb7-l\">\r\n              <nav className=\"dt w-100 mw8 center\"> \r\n                <div className=\"dtc w2 v-mid pa3\">\r\n                  <a href=\"/\" className=\"dib w3 h3 pa1 grow-large \">\r\n                    <PinkMusicIcon />\r\n                  </a>\r\n                </div>\r\n                <div className=\"dtc v-mid tr pa3\">\r\n                  <a className=\"f6 fw4 hover-white no-underline white-70 dn dib-ns pv2 ph3\" href=\"/\" >Your Favorite</a> \r\n                  <a className=\"f6 fw4 hover-white no-underline white-70 dn dib-ns pv2 ph3\" href=\"/\" >Songs</a> \r\n                  <a className=\"f6 fw4 hover-white no-underline white-70 dn dib-l pv2 ph3\" href=\"/\" >About</a> \r\n                  <a className=\"f6 fw4 hover-white no-underline white-70 dib ml2 pv2 ph3 ba\" href=\"/\" >Sign Up</a> \r\n                </div>\r\n              </nav> \r\n              <div className=\"tc-l mt4 mt5-m mt6-l ph3\">\r\n                  <h1 className=\"h1-clip\">SONG FINDER</h1>\r\n                <h2 className=\"fw1 f3 white-80 mt3 mb4\">Find top 3 tracks of your artist:</h2>\r\n                <Search searchChange={searchChange} buttonSubmit={buttonSubmit} />\r\n              </div>\r\n            </div>\r\n          </div> \r\n        </header>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Header;","import styled from 'styled-components'\r\nimport {FavoriteBorder} from 'styled-icons/material/FavoriteBorder'\r\n\r\nconst RedFavoriteEmpty = styled(FavoriteBorder)`\r\n  color: rgba(0,0,0,.3);\r\n  width: 32px;\r\n  height: 32px;\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  cursor: pointer;\r\n`\r\nexport default RedFavoriteEmpty;","import React from 'react';\r\nimport Logo from '../Header/Logo/Logo'\r\nimport RedFavoriteEmpty from '../FavoriteIcon/FavoriteIcon'\r\n\r\nconst Card = (props) => {\r\n\r\nreturn (\r\n\r\n    <article className=\" mw5 center relative bg-white br3 pa3 pa4-ns mv5 ba b--black-10\">\r\n        <RedFavoriteEmpty absolute top-10 left-10 hvr-pulse />\r\n        <div className=\"tc\">\r\n            <Logo />\r\n            <h1 className=\"f3 mb2 pb3 dark-red\">{props.track}</h1>\r\n            <h2 className=\"f5 fw4 gray mt0\"><span className='dark-red'>Artist:</span><br />{props.artist}</h2>\r\n            <h2 className=\"f5 fw4 gray mt0\"><span className='dark-red'>Album:</span><br />{props.album}</h2>\r\n        </div>\r\n    </article>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\n\r\nconst CardList = ( { isMusic, music }) => {\r\n\r\n   if(isMusic === false) {\r\n\r\n    return (<p>Search now</p>)\r\n\r\n\r\n   } else {\r\n\r\n    return (<div className=\"flex flex-wrap relative justify-center\">{\r\n\r\n        music.map((el, i) => {\r\n    \r\n            return <Card key={i} track={el.track} album={el.album} artist={el.artist} / >  })\r\n          \r\n    }</div>);\r\n\r\n   }\r\n    \r\n\r\n} \r\n\r\nexport default CardList;","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport CardList from './components/CardList/CardList';\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor() {\n\n    super();\n  \n    this.state = {\n  \n      input: '',\n      cardsShow: false,\n      music: [\n        { track: '', album: '', artist: ''},\n        { track: '', album: '', artist: ''},\n        { track: '', album: '', artist: ''}\n      ] \n    }\n  } \n\n  onSearchChange = event => {\n    this.setState({ input: event.target.value });\n    console.log(event.target.value);\n  };\n\n\n   onButtonSubmit = () => {\n     \n    const apiKey = '22d91306931ee5a074eb08a71662cc98';\n    const url = `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_artist=${this.state.input}&page_size=3&page=1&s_track_rating=desc & apikey=${apiKey}`;\n\n    fetch(url)\n      .then(data => {\n      \n        return data.json()\n        \n      })\n      .then(res => {\n\n        if (res.message.header.available !== 0) {\n\n          this.setState( {\n            music: [\n            { track: res.message.body.track_list[0].track.track_name, \n              album: res.message.body.track_list[0].track.album_name, \n              artist: res.message.body.track_list[0].track.artist_name},\n            { track: res.message.body.track_list[1].track.track_name, \n              album: res.message.body.track_list[1].track.album_name, \n              artist: res.message.body.track_list[1].track.artist_name},\n            { track: res.message.body.track_list[2].track.track_name, \n              album: res.message.body.track_list[2].track.album_name, \n              artist: res.message.body.track_list[2].track.artist_name},\n            ] \n          });\n  \n          this.setState( {\n            cardsShow: true,\n          });\n          \n        } \n      });\n  }\n  \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header searchChange={this.onSearchChange} buttonSubmit={this.onButtonSubmit} />\n        <CardList isMusic={this.state.cardsShow} music={this.state.music} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}